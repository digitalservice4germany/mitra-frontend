var x=Object.defineProperty;var l=Object.getOwnPropertySymbols;var w=Object.prototype.hasOwnProperty,E=Object.prototype.propertyIsEnumerable;var m=(e,t,n)=>t in e?x(e,t,{enumerable:!0,configurable:!0,writable:!0,value:n}):e[t]=n,o=(e,t)=>{for(var n in t||(t={}))w.call(t,n)&&m(e,n,t[n]);if(l)for(var n of l(t))E.call(t,n)&&m(e,n,t[n]);return e};var c=(e,t,n)=>{if(!t.has(e))throw TypeError("Cannot "+n)};var d=(e,t,n)=>(c(e,t,"read from private field"),n?n.call(e):t.get(e)),g=(e,t,n)=>{if(t.has(e))throw TypeError("Cannot add the same private member more than once");t instanceof WeakSet?t.add(e):t.set(e,n)},f=(e,t,n,s)=>(c(e,t,"write to private field"),s?s.call(e,n):t.set(e,n),n);var u,R=new Uint8Array(16);function V(){if(!u&&(u=typeof crypto!="undefined"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto)||typeof msCrypto!="undefined"&&typeof msCrypto.getRandomValues=="function"&&msCrypto.getRandomValues.bind(msCrypto),!u))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return u(R)}var C=/^(?:[0-9a-f]{8}-[0-9a-f]{4}-[1-5][0-9a-f]{3}-[89ab][0-9a-f]{3}-[0-9a-f]{12}|00000000-0000-0000-0000-000000000000)$/i;function S(e){return typeof e=="string"&&C.test(e)}var r=[];for(var p=0;p<256;++p)r.push((p+256).toString(16).substr(1));function I(e){var t=arguments.length>1&&arguments[1]!==void 0?arguments[1]:0,n=(r[e[t+0]]+r[e[t+1]]+r[e[t+2]]+r[e[t+3]]+"-"+r[e[t+4]]+r[e[t+5]]+"-"+r[e[t+6]]+r[e[t+7]]+"-"+r[e[t+8]]+r[e[t+9]]+"-"+r[e[t+10]]+r[e[t+11]]+r[e[t+12]]+r[e[t+13]]+r[e[t+14]]+r[e[t+15]]).toLowerCase();if(!S(n))throw TypeError("Stringified UUID is invalid");return n}function b(e,t,n){e=e||{};var s=e.random||(e.rng||V)();if(s[6]=s[6]&15|64,s[8]=s[8]&63|128,t){n=n||0;for(var i=0;i<16;++i)t[n+i]=s[i];return t}return I(s)}const A=e=>e instanceof v;class v{constructor(t=b()){this.id=t,this.id=t}equals(t){return t==null?!1:this===t?!0:A(t)?this.id===t.id:!1}}function y(e,t){return e.findIndex(n=>n.equals(t))}var a;const h=class extends v{constructor(t="Unbenannter Vertrag",n,s){super(s);g(this,a,void 0);this.title=t,this.modules=n,f(this,a,{createdAt:new Date}),Object.defineProperty(this,"metadata",{get:()=>d(this,a)})}static fromPlaybook(t){const n=t.modules.map(s=>s.clone());return new h(void 0,n)}get path(){return Object.freeze(this.modules.flatMap(t=>t.path))}nextStepInPathAt(t){return this.path[y(this.path,t)+1]}previousStepInPathAt(t){return this.path[y(this.path,t)-1]}getModuleFor(t){return this.modules.find(n=>n.path.find(s=>s.equals(t)))}updateMetadata(t){return f(this,a,o(o({},d(this,a)),t)),this}};let P=h;a=new WeakMap;export{P as C,v as E};
